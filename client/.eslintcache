[{"/usr/app/src/index.js":"1","/usr/app/src/App.js":"2","/usr/app/src/components/ItemList.js":"3","/usr/app/src/components/Context.js":"4","/usr/app/src/components/Navbar.js":"5","/usr/app/src/components/ItemModal.js":"6","/usr/app/src/components/Alert.js":"7","/usr/app/src/config.js":"8"},{"size":244,"mtime":1608980561822,"results":"9","hashOfConfig":"10"},{"size":365,"mtime":1608980577446,"results":"11","hashOfConfig":"10"},{"size":575,"mtime":1609002316041,"results":"12","hashOfConfig":"10"},{"size":3371,"mtime":1609143462681,"results":"13","hashOfConfig":"10"},{"size":605,"mtime":1609081998625,"results":"14","hashOfConfig":"10"},{"size":3127,"mtime":1609081161329,"results":"15","hashOfConfig":"10"},{"size":1303,"mtime":1609143373521,"results":"16","hashOfConfig":"10"},{"size":107,"mtime":1608993304547,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1eupzal",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/usr/app/src/index.js",[],["37","38"],"/usr/app/src/App.js",[],"/usr/app/src/components/ItemList.js",["39"],"import React, { useContext } from \"react\";\nimport ItemModal from \"./ItemModal\";\nimport { Context } from \"./Context\";\nimport { Container } from \"react-bootstrap\";\nimport Alert from \"./Alert\";\n\nconst ItemList = () => {\n  const { items } = useContext(Context);\n  const [itemsValue, setItems] = items;\n\n  return (\n    <Container className=\"mt-4\">\n      <div className=\"d-flex flex-column\">\n        {itemsValue.map((item) => {\n          return <ItemModal item={item} key={item._id} />;\n        })}\n        <Alert />\n      </div>\n    </Container>\n  );\n};\n\nexport default ItemList;\n","/usr/app/src/components/Context.js",["40","41","42"],"/usr/app/src/components/Navbar.js",["43"],"/usr/app/src/components/ItemModal.js",["44","45"],"import React, { useState, useContext } from \"react\";\nimport { Button, Modal, Row, Col, Container } from \"react-bootstrap\";\nimport { Context } from \"./Context\";\n\nconst ItemModal = ({ item }) => {\n  // Modal\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // Context\n  const { cart } = useContext(Context);\n  const [cartValue, setCart] = cart;\n\n  const { onAdd, onRemove } = useContext(Context);\n\n  return (\n    <>\n      <Button variant=\"outline-info\" onClick={handleShow} className=\"mt-3\">\n        <Container>\n          <Row className=\"d-flex justify-content-between\">\n            <Col lg={10}>\n              <p className=\"text-left mt-3\">{item.name}</p>\n            </Col>\n            <Col lg={2}>\n              <p className=\"text-left mt-3\">\n                {\" \"}\n                {!item.quantity ? (\n                  <>\n                    <p>Not available</p>\n                  </>\n                ) : (\n                  <>Qty: {item.quantity}</>\n                )}\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{item.name}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Row>\n            <Col sm={8}>{item.description}</Col>\n            <Col sm={4}>\n              <div className=\"d-flex flex-column\">\n                <h4>$ {item.price}</h4>\n                {!item.quantity ? (\n                  <h6>Out of stock</h6>\n                ) : (\n                  <>\n                    <p>Stock: {item.quantity}</p>\n                    <Button\n                      variant=\"success\"\n                      onClick={() => {\n                        onAdd(item._id);\n                      }}\n                    >\n                      add to cart\n                    </Button>\n                  </>\n                )}\n                {cartValue.includes(item._id) ? (\n                  <>\n                    <Button\n                      variant=\"warning\"\n                      className=\"my-2\"\n                      onClick={() => {\n                        onRemove(item._id);\n                      }}\n                    >\n                      remove from cart\n                    </Button>\n                    <p>\n                      This item is in cart:{\" \"}\n                      {\n                        cartValue.filter((elem) => {\n                          return elem == item._id;\n                        }).length\n                      }\n                    </p>\n                  </>\n                ) : (\n                  <>{null}</>\n                )}\n              </div>\n            </Col>\n          </Row>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ItemModal;\n","/usr/app/src/components/Alert.js",["46","47","48","49","50","51"],"/usr/app/src/config.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":9,"column":22,"nodeType":"58","messageId":"59","endLine":9,"endColumn":30},{"ruleId":"56","severity":1,"message":"60","line":33,"column":13,"nodeType":"58","messageId":"59","endLine":33,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":46,"column":26,"nodeType":"63","messageId":"64","endLine":46,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":82,"column":26,"nodeType":"63","messageId":"64","endLine":82,"endColumn":28},{"ruleId":"56","severity":1,"message":"65","line":7,"column":21,"nodeType":"58","messageId":"59","endLine":7,"endColumn":28},{"ruleId":"56","severity":1,"message":"65","line":14,"column":21,"nodeType":"58","messageId":"59","endLine":14,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":89,"column":39,"nodeType":"63","messageId":"64","endLine":89,"endColumn":41},{"ruleId":"56","severity":1,"message":"66","line":7,"column":22,"nodeType":"58","messageId":"59","endLine":7,"endColumn":30},{"ruleId":"56","severity":1,"message":"65","line":10,"column":21,"nodeType":"58","messageId":"59","endLine":10,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":13,"column":22,"nodeType":"58","messageId":"59","endLine":13,"endColumn":30},{"ruleId":"56","severity":1,"message":"67","line":16,"column":21,"nodeType":"58","messageId":"59","endLine":16,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":21,"column":33,"nodeType":"63","messageId":"64","endLine":21,"endColumn":35},{"ruleId":"61","severity":1,"message":"62","line":24,"column":63,"nodeType":"63","messageId":"64","endLine":24,"endColumn":65},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'setItems' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCart' is assigned a value but never used.","'setAlert' is assigned a value but never used.","'setItem' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]